Domain(dname, dabbreviation, pname, pabbreviation, bname, code, course_name, credits, 
        idnr, sname, login, classif_name, capacity, position, grade)

Functional dependencies:

dname -> dabbreviation
dabbreviation -> dname
pname -> pabbreviation
idnr -> sname login
login -> idnr
idnr -> pname bname
code -> course_name credits
code -> dname
code -> capacity
idnr code -> position
code position -> idnr
idnr code -> grade


//BCNF NORMALIZATION

1) Decompose using dname -> dabbreviation:
Departments(dname, dabbreviation) already in BCNF
key: dname
dabbreviation is UNIQUE

remaining domain:
Domain2(dname, pname, pabbreviation, bname, code, course_name, credits, idnr, sname, login, classif_name, capacity, position, grade)

2) Decompose using pname -> pabbreviation:
Programs(pname, pabbreviation) already in BCNF
key: pname

remaining domain:
Domain3(dname, pname, bname, code, course_name, credits, idnr, sname, login, classif_name, capacity, position, grade)

3) Decompose using idnr -> sname login:
Students(idnr, sname, login, pname, bname) already in BCNF
key: idnr
login is UNIQUE


remaining domain:
Domain4(idnr, code, dname, course_name, credits, classif_name, capacity, position, grade)

4) Decompose using code -> course_name credits:
Courses(code, course_name, dname, credits, capacity) already in BCNF
key: code

remaining domain:
Domain5(idnr, code, position, grade,classif_name)

5) Decompose using idnr code -> position:
RegisteredCourses(idnr, code, position, grade) already in BCNF
keys: idnr, code
(code, position) is UNIQUE

6)
remaining domain:
Classified(idnr, code, classif_name)
keys: idnr, code, classif_name




